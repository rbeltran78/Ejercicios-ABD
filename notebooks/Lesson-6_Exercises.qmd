---
title: "Tema 6: PEC"
format:
  html:
    code-copy:       true
    code-tools:      true
    df-print:        paged
    embed-resources: true
    theme:           ../www/extra-styles.scss
    toc:             true
    toc-location:    left
bibliography:        ../www/abd.bib
csl:                 ../www/apa-old-doi-prefix.csl
callout-appearance: minimal
---

# Introducción

En este tema hemos estudiado el concepto de **distribución predictiva** y cómo se puede estimar de manera sencilla mediante el método de Monte Carlo.

También hemos visto:

-   Cómo realizar comprobaciones predictivas con la **distribución predictiva posterior** (lo que llamamos **comprobaciones predictivas posteriores**, posterior predictive checks, o PPCs).

-   Cómo calcular **valores-p predictivos posteriores** para hacer inferencias y evaluar la discrepancia entre los datos observados y la distribución predictiva.

-   Cómo usar la **distribución predictiva previa** para evaluar la adecuación de la distribución previa a los datos observados.

En estos ejercicios, vamos a poner en práctica estos conceptos con algunos modelos ya conocidos y estudiados.
En este caso, vamos a utilizar los modelos beta-binomial y gamma-Poisson ya vistos en los temas anteriores.

Fíjate que @ross2022 asume distribuciones discreta (y no siempre uniformes) para el parámetro de probabilidad **en los ejemplos 7.1 a 7.4**.
Es decir, aunque la distribución de la variable observada sea binomial, **no se trata de modelos beta-binomiales**.

```{r setup}
#| message: false

# Paquetes:
library(tidyverse)
library(RColorBrewer)
library(scales)


# Configuración de la salida gráfica:

PALETA <- brewer.pal(8, "Set2") # Colores por defecto
color_defecto <- PALETA[1]      # Color por defecto
options(ggplot2.discrete.colour = PALETA)

theme_set(theme_bw()) # Tema "neutro" para la representación gráfica

# Redondea los números reales "inline":
options(digits = 3L)                
options(knitr.digits.signif = FALSE)

# Inicializa la semilla aleatoria:
set.seed(20250327)
```

Inicializamos el entorno como es habitual.
Dado que, además, vamos a utilizar el método de Monte Carlo, **hemos inicializado la semilla aleatoria**, para asegurar la **reproducibilidad de los resultados**.

# Ejercicio 1: Modelo beta-binomial de la "tasa de aceptación"

## Distribución predictiva previa

Vamos a empezar utilizando el ejemplo ya familiar que introdujimos en el Tema 3.

Recuerda que se trata de un modelo beta-binomial en el que el parámetro $\theta$ representa la "tasa de aceptación" de los/as usuari/as que han probado un app, a los que les pregunta si la descargarían en su móvil.

Los datos que se han obtenido en las dos muestras de la investigación son:

```{r beta-binomial-muestra}
aceptacion_muestra_1 <- tibble(
  id_participante   = 1:22,
  resp_descarga_app = c(
    "Si", "Si", "No", "No", "Si", "Si", "Si", "Si", "No", "Si", "Si",
    "Si", "Si", "Si", "Si", "Si", "No", "Si", "No", "Si", "Si", "Si"
  )
)

# Tamaño de la muestra (necesario para enunciados más adelante)
n_muestra_1 <- aceptacion_muestra_1 |> count() |> pull()

aceptacion_muestra_2 <- tibble(
  id_participante   = 1:113,
  resp_descarga_app = c(
    "Si", "Si", "No", "No", "Si", "Si", "Si", "Si", "No", "Si", "Si",
    "Si", "Si", "Si", "Si", "Si", "No", "Si", "No", "Si", "Si", "Si", 
    "No", "Si", "Si", "Si", "Si", "No", "No", "Si", "No", "Si", "Si", 
    "Si", "Si", "Si", "No", "Si", "No", "No", "Si", "No", "Si", "Si", 
    "No", "No", "No", "Si", "No", "No", "Si", "Si", "No", "No", "Si", 
    "No", "Si", "No", "No", "No", "Si", "Si", "No", "Si", "Si", "No", 
    "Si", "Si", "No", "Si", "Si", "No", "Si", "No", "Si", "No", "Si", 
    "No", "No", "No", "Si", "Si", "No", "No", "Si", "Si", "No", "No", 
    "No", "Si", "Si", "No", "Si", "Si", "No", "Si", "Si", "Si", "Si", 
    "No", "Si", "No", "No", "No", "No", "No", "Si", "No", "No", "Si", 
    "Si", "Si", "Si"
  )
)
```

Como en temas anteriores, vamos a utilizar una distribución no informativa para representar nuestra creencia a priori sobre la tasa de aceptación.

### Pregunta 1

-   Aproxima la distribución previa de $\theta$ por el método de Monte Carlo de manera que el valor esperado tenga una precisión de 0.01 con el 99% de probabilidad. Comprueba que la media y varianza se aproximan a los valores teóricos y representa la distribución resultante.

::: {#respuesta-1 .callout-note}
```{r}
z = 2.576
var_theta = sqrt(1/12)
prec = 0.01

N_min = (z * var_theta / prec)^2
N_min


theta_sim = rbeta(N_min, 1, 1) #Theta simulado

theta_sim

mean(theta_sim)
var(theta_sim)

tibble(
  media_simulada = mean(theta_sim),
  varianza_simulada = var(theta_sim),
  media_teorica = 0.5,
  varianza_teorica = 1/12
)


tibble(theta = theta_sim) |>
  ggplot(aes(x = theta)) +
  geom_histogram(bins = 50, fill = color_defecto, color = "white") +
  geom_vline(xintercept = 0.5, color = "red", linetype = "dashed", linewidth = 1) +
  labs(
    title = "Distribución previa simulada de θ",
    x = expression(theta),
    y = "Frecuencia"
  )


#La varianza y la media se aproximan a la distribucion que estamos apuntando. Es decir, casi una distribucion uniforme.

```

:::

### Pregunta 2

-   A partir de la distribución previa simulada de $$\theta$$, simula los resultados de pruebas binomiales para la primera muestra del estudio. (Ten en cuenta que debe tener el tamaño muestral correspondiente). Representa la distribución predictiva previa resultante e interprétala.

::: {#respuesta-2 .callout-note}
```{r}

n_c1 = 22 #Clase 1

dppre_c1 = rbinom(n = length(theta_sim), n_c1, prob = theta_sim)

tibble(y = dppre_c1) |> 
  count(y) |> 
  ggplot(aes(x = y, y = n)) +
  geom_col(fill = color_defecto) +
  labs(
    title = "Distribución predictiva previa",
    x = "Número de respuestas afirmativas (Sí)",
    y = "Frecuencia"
  )

#Entonces lo que podemos visualizar es la distribucion predictiva previa que muestra los posibles resultados de la primera muestra. Se comporta como una distribucion previa uniforme dado que utilizamos este tipo de distribucion.

```

:::

### Pregunta 3

-   Utilizando la distribución predictiva previa de la pregunta anterior, calcula en qué centil se encuentra la primera muestra empírica del estudio de aceptación. ¿Cuál es la probabilidad de obtener un valor igual o mayor que este? ¿Y un valor igual o menor?

::: {#respuesta-3 .callout-note}
```{r}

n_c1_si = sum(aceptacion_muestra_1$resp_descarga_app == "Si")
n_c1_si # Es 17

mean(dppre_c1 <= n_c1_si) #la prob de obtener un valor igual o menor
mean(dppre_c1 >= n_c1_si) #la prob de obtener un valor igual o mayor



```

:::

## Distribución predictiva posterior

### Pregunta 4

-   Utiliza el mismo nº de muestras de Monte Carlo de la distribución previa para aproximar la distribución posterior de $$\theta$$. (Utiliza la propiedad ya conocida de la conjugación para muestrear de la distribución posterior). Representa la distribución posterior obtenida.

::: {#respuesta-4 .callout-note}

#Beta posterior
$$\theta|y \sim Beta (\alpha + y,\beta + n - y)$$


```{r}

N_min #simulaciones necesarias
n_c1_si # Es 17 = y
n_c1 #n = cantidad de respuestas = 22


dppost_c1 <- rbeta(N_min, 18, 6)

tibble(
  theta = c(theta_sim, dppost_c1),
  tipo = rep(c("Previa", "Posterior"), each = N_min)
) |>
  ggplot(aes(x = theta, fill = tipo)) +
  geom_histogram(bins = 50, color = "white", position = "identity", alpha = 0.6) +
  scale_fill_manual(values = c("Previa" = PALETA[2], "Posterior" = PALETA[1])) +
  labs(
    title = "Comparación entre distribución previa y posterior de θ",
    x = expression(theta),
    y = "Frecuencia",
    fill = "Distribución"
  )

#La distribucion posterior beta muestra la concentracion en los valores altos. Se va modificando la distribucion previa al incluir datos empiricos.

```

:::

### Pregunta 5

-   A partir de la distribución posterior simulada de $\theta$, simula los resultados de pruebas binomiales para la primera muestra del estudio y represéntala.

::: {#respuesta-5 .callout-note}
```{r}

dpposterior_c1 = rbinom(n = length(dppost_c1), n_c1, prob = dppost_c1)

tibble(y = dpposterior_c1) |>
  count(y) |>
  ggplot(aes(x = y, y = n)) +
  geom_col(fill = color_defecto) +
  labs(
    title = "Distribución predictiva posterior",
    x = "Número de respuestas afirmativas",
    y = "Frecuencia"
  )


```

:::

Lo que acabas de representar es la **distribución predictiva posterior** del modelo ajustado con la muestra 1 del estudio.

### Pregunta 6

-   Obten las distribuciones posterior y predictiva posterior con la muestra 2, **asumiendo desconocimiento total sobre la tasa de aceptación** (i.e., distribución no informativa).

::: {#respuesta-6 .callout-note}

#Beta posterior
$$\theta|y \sim Beta (\alpha + y,\beta + n - y)$$

```{r}

n_c2 = nrow(aceptacion_muestra_2) #n total = 113
n_c2_si = sum(aceptacion_muestra_2$resp_descarga_app == "Si") #n respuestas si = 65
#Alfa = 1
#Beta = 1

dpost_c2 <- rbeta(N_min, 66, 49)

dpposterior_c2 <- rbinom(n = length(dpost_c2), n_c2, prob = dpost_c2)

```

:::

## Comprobaciones predictivas posteriores

### Pregunta 7

-   Dada la distribución posterior tras el ajuste del modelo con la muestra 2, aproxima la distribución predictiva posterior para un tamaño muestral de `{r} n_muestra_1`. Represéntala junto con la distribución predictiva posterior resultante de ajustar el modelo con la muestra 1, y representa mediante una línea vertical el valor obtenido de la muestra empírica 1.

::: {#respuesta-7 .callout-note}
```{r}
N_min
n_c1 #N de clase 1
dpost_c2 #distribucion posterior basada en la clase 2

dpposterior_c2_n1 <- rbinom(N_min, n_c1, prob = dpost_c2) #con tamano muestral c1.


pred_comparadas = tibble(
  y = c(dpposterior_c1, dpposterior_c2_n1),
  muestra = rep(c("Posterior muestra 1", "Posterior muestra 2"), each = N_min)
)

pred_comparadas |> 
  count(muestra, y) |> 
  ggplot(aes(x = y, y = n, fill = muestra)) +
  geom_col(position = "identity", alpha = 0.6, color = "white") +
  scale_fill_manual(values = c("Posterior muestra 1" = PALETA[1], 
                               "Posterior muestra 2" = PALETA[2])) +
  geom_vline(xintercept = 17, linetype = "dashed", color = "black", linewidth = 1) +
  labs(
    title = "Comparación de distribuciones predictivas posteriores",
    x = "Número de respuestas afirmativas (n = 22)",
    y = "Frecuencia",
    fill = "Ajuste con"
  )

#Revisando el grafico podemos indicar que los resultados obtenidos bajo el modelo predictivo de la clase 2, añadir una muestra de 22 casos, obtener personas que dicen si es poco probable en comparacion al modelo de la clase 1.


```

:::

### Pregunta 8

-   Calcula, en el modelo ajustado con la muestra 2, la probabilidad de obtener un valor mayor o igual / menor o igual que la primera muestra empírica. ¿Cómo se representan estas probabilidades en el gráfico anterior?

::: {#respuesta-8 .callout-note}
```{r}
n_c1_si

mean(dpposterior_c2_n1 >= n_c1_si)  # Probabilidad de obtener 17 o más
mean(dpposterior_c2_n1 <= n_c1_si)  # Probabilidad de obtener 17 o menos

#Por un lado obtener mas de 17 si tiene una probiabilidad de 0.0572, lo cual es muy poco probable. En cambio obtener 17 si o menos, la probabilidad es de 0.977.

```

:::

### Pregunta 9

-   Si te preguntasen por el *valor-*$p$ *predictivo posterior* de la hipótesis que "la muestra 1 esté extraída de la misma población que la muestra 2", ¿qué valor reportarías y cómo lo interpretarías?

::: {#respuesta-9 .callout-note}
```{r}

mean(dpposterior_c2_n1 >= n_c1_si)

#La probabilidad de que se obtenga una muestra en donde existan 17 casos que digan que sí es de 0.0572. Por lo tanto, nos lleva a  Lo cual es una probabilidad sumamente baja

```

:::

### Pregunta 10

-   Prueba a hacerlo a la inversa; es decir, ajusta el modelo con la muestra 1, y después realiza la *comprobación predictiva posterior* de si la muestra 2 proviene de la misma población que la muestra 1. ¿Qué conclusión obtendrías?

::: {#respuesta-10 .callout-note}
```{r}
dpposterior_c2_n2 <- rbinom(N_min, n_c2, prob = dpost_c2) #con tamano muestral c2.


mean(dpposterior_c2_n2 >= n_c2_si)  # Probabilidad de obtener 65 o más
mean(dpposterior_c2_n2 <= n_c2_si)  # Probabilidad de obtener 65 o menos

#La conclusion que obtendria seria la siguiente, que si la muestra 1 viniera de la misma poblacion que la muestra 2, tendriamos valores similares en terminos de probabilidad. Ya que en este caso, la probabilidad de obtener una muestra de sujetos que indican 65 "si" o menos es de 0.519 indicando que este valor seria central dentro de la distribucion. Tal probabilidad no se encuentra cuando se calculo la probabilidad utilizando la muestra 1.

```

:::

# Ejercicio 2: Modelo gamma-Poisson de la "tasa de fertilidad"

El ejercicio anterior se basa en la distribución beta-binomial, que permite simplificar la distribución predictiva posterior al necesitar generar únicamente un valor observado (nº de usuarios que "aceptan" la aplicación) para cada muestra.

Sin embargo, es habitual encontrar distribuciones predictivas posteriores más complejas o derivadas, como hemos visto en la lectura.
En el siguiente ejemplo veremos cómo simular muestras de una distribución predictiva posterior utilizando el modelo "gamma-Poisson".

## Distribución predictiva posterior

En [la lectura del Tema 5](https://agora.uned.es/mod/resource/view.php?id=512338) (@hoff2009) y los ejercicios vimos el ejemplo de las tasas de fertilidad de mujeres de 40 años con y sin título universitario, con datos de la Encuesta Social General de los EEUU durante la década de los 1990 [los detalles están en @hoff2009, capítulo 3].

A continuación tienes los datos que aparecen en la lectura, los estadísticos resumen para cada grupo, y una representación gráfica:

```{r datos-fertilidad-gss-1990}
fertilidad_gss_1990 <- tibble(
  titulo_uni = c("sin" |> rep(7),                 "con" |> rep(5)),
  n_hijos    = c(0:6,                             0:4),
  frecuencia = c(20L, 19L, 38L, 20L, 10L, 2L, 2L, 11L, 11L, 13L, 7L, 2L)
) |>
  # Rellena los niveles para hacer ambas muestras más "comparables":
  complete(titulo_uni, n_hijos, fill = list(frecuencia = 0))

fert_estadisticos <- fertilidad_gss_1990 |>
  group_by(titulo_uni) |>
  summarize(y = sum(n_hijos * frecuencia), n = sum(frecuencia))

fert_estadisticos # y = nº hijos en cada grupo, n = nº mujeres en cada grupo

fertilidad_gss_1990 |>
  ggplot(aes(n_hijos, frecuencia, fill = titulo_uni)) +
  geom_col(position = "dodge") +
  labs(fill = "Título universitario", x  = "Nº hijos", y = "Frecuencia")
```

La distribución posterior de la tasa de fertilidad $\lambda$ en el modelo gamma-Poisson puede obtenerse mediante conjugación de la distribución previa $\lambda \sim Gamma(a, b)$, y viene dada por $\lambda \sim Gamma(a + \sum y_i, b + n)$, siendo $\sum y_i$ el nº total de ocurrencias observadas en una muestra (en nuestro caso, nº total de hijos en la muestra / cada grupo) y $n$ el nº total de casos (nº de mujeres la muestra / en cada grupo).

Como vimos en los ejercicios del tema 5, las distribuciones posteriores para cada grupo, asumiendo una distribución previa $\lambda \sim Gamma(2, 1)$, vienen dadas por:

```{r fertilidad-ajuste}
A_PRE <- 2L
B_PRE <- 1L

params_fertilidad <- fert_estadisticos |> mutate(
  a_post = A_PRE + y,
  b_post = B_PRE + n
)

params_fertiliad_sin <- params_fertilidad |>
  filter(titulo_uni == "sin") 
a_post_sin <- params_fertiliad_sin |> pull(a_post)
b_post_sin <- params_fertiliad_sin |> pull(b_post)

params_fertiliad_con <- params_fertilidad |>
  filter(titulo_uni == "con") 
a_post_con <- params_fertiliad_con |> pull(a_post)
b_post_con <- params_fertiliad_con |> pull(b_post)
```

$$
  (\lambda | y_{sin}) \sim Gamma(`{r} a_post_sin`, `{r} b_post_sin`)
$$

$$
  (\lambda | y_{con}) \sim Gamma(`{r} a_post_con`, `{r} b_post_con`)
$$

### Pregunta 11

-   Utilizando 10^6^ muestras simuladas, aproxima las dos distribuciones posteriores y represéntalas.

*(Nota: Para representar una densidad directamente con `ggplot()` a partir de las muestras de simuladas, consulta la ayuda de `geom_density()`)*

::: {#respuesta-11 .callout-note}
```{r}
n_sim = 10^6 #muestras simuladas

dposterior_conh = rgamma(n_sim, params_fertiliad_con$a_post, params_fertiliad_con$b_post)

dposterior_sinh = rgamma(n_sim, params_fertiliad_sin$a_post, params_fertiliad_sin$b_post)

graph_dposteriors_fertilidad = tibble(
  distribuciones_posteriores = c(dposterior_conh, dposterior_sinh),
  grupo = rep(c("Con título", "Sin título"), each = n_sim)
)


ggplot(graph_dposteriors_fertilidad, aes(x = distribuciones_posteriores, fill = grupo)) +
  geom_density(alpha = 0.6) +
  scale_fill_manual(values = c("Con título" = PALETA[1], "Sin título" = PALETA[2])) +
  labs(
    title = "Distribuciones posteriores de la tasa de fertilidad",
    x = expression(lambda),
    y = "Densidad",
    fill = "Grupo"
  ) +
  theme_minimal()


```

:::

### Pregunta 12

-   A partir de las distribuciones posteriores de $\lambda$, aproxima las distribuciones predictivas posteriores simulando datos de la distribución de Poisson (consulta la ayuda de `rpois()` si lo necesitas). Representa las distribuciones predictivas posteriores de ambos grupos.

::: {#respuesta-12 .callout-note}
```{r}

dpred_post_conh = rpois(n_sim, dposterior_conh)
dpred_post_sinh = rpois(n_sim, dposterior_sinh)

graph_dpredict_posteriors_fertilidad = tibble(
  distribuciones_pred_posteriores = c(dpred_post_conh, dpred_post_sinh),
  grupo = rep(c("Con título", "Sin título"), each = n_sim)
)

ggplot(graph_dpredict_posteriors_fertilidad, aes(x = distribuciones_pred_posteriores, fill = grupo)) +
  geom_bar(stat = "count") +
  scale_fill_manual(values = c("Con título" = PALETA[1], "Sin título" = PALETA[2])) +
  labs(
    title = "Distribuciones predictivas posteriores de la tasa de fertilidad",
    x = "Valores simulados de un Poisson (conteos)",
    y = "Frecuencia simulada",
    fill = "Grupo"
  ) +
  theme_minimal()


```

:::

## Inferencia sobre la distribución predictiva posterior

En base a las distribuciones predictivas posteriores, obtén las respuestas a continuación.

### Pregunta 13

-   ¿Cuáles son las probabilidades de que una mujer (de 40 años en los 90 en USA) con 4 hijos o más sea o no titulada universitaria? ¿Cuál es la "odds" de que no sea titulada universitaria?

::: {#respuesta-13 .callout-note}
```{r}
dpred_post_conh = rpois(n_sim, dposterior_conh)
dpred_post_sinh = rpois(n_sim, dposterior_sinh)


sum(dpred_post_conh >= 4) #es el total 68841 de mujeres c/titulo y tienen 4 hijos o mas.
sum(dpred_post_sinh >= 4) #es el total 135621 de mujeres s/titulo y tienen 4 hijos o mas.

Prob_sintitulo = sum(dpred_post_sinh >= 4)/(sum(dpred_post_sinh >= 4) + sum(dpred_post_conh >= 4))

Prob_contitulo = (1-Prob_sintitulo)

Odds = Prob_sintitulo/Prob_contitulo

Odds

#Por cada mujer con título universitario que tiene 4 hijos o más, hay aproximadamente 1.97 mujeres sin título universitario con 4 hijos o más.

```

:::

### Pregunta 14

-   Si tomamos dos mujeres al azar, una con y otra sin titulación universitaria, ¿cuál es la probabilidad de que la mujer con titulación universitaria tenga más hijos que la mujer sin titulación universitaria?

::: {#respuesta-14 .callout-note}
```{r}

mean(dpred_post_conh > dpred_post_sinh)

#La logica es la siguiente, tenemos dos distribuciones, una con mujeres con titulos e hijos, y mujeres sin titulos e hijos. Lo que estamos haciendo es calculando la probabilidad de que una mujer con titulo e hijos tenga mas hijos que una mujer sin titulo e hijos. La probabilidad de que esto suceda es de 0.3. Es decir, es poco probable que se cumpla este enunciado.


```

:::

### Pregunta 15

-   A partir de estas aproximaciones a las distribuciones predictivas posteriores, ¿podrías obtener la probabilidad conjunta de que una mujer no tenga ningún hijo y sea o no titulada universitaria? Justifica tu respuesta.

::: {#respuesta-15 .callout-note}
```{r}

#Podriamos calcular las probabilidades. De hecho aqui esta.

sum(dpred_post_conh == 0) / (2 * n_sim)
sum(dpred_post_sinh == 0) / (2 * n_sim)

#Sin embargo, esto implica que estamos asumiendo las probabilidades como equiprobables. Lo cual es un problema. Entendemos que no hay equiprobabilidad de casos entre las distribuciones, cuando quizas quizas en la poblacion real no existen tales proporciones.

```

:::

## Comprobaciones predictivas posteriores

### Pregunta 16

-   Representa la *proporción* de mujeres tituladas universitarias en función del número de hijos, junto con su distribución predictiva posterior.

::: {#respuesta-16 .callout-note}
```{r}

Prop_titulo_hijos = graph_dpredict_posteriors_fertilidad %>%
  group_by(distribuciones_pred_posteriores) %>%
  summarize(
    total = n(),
    con_titulo = sum(grupo == "Con título"),
    prop_con_titulo = con_titulo / total
  )

#El tibble muestra la proporción mujeres con título universitario según el número de hijos. Se observa que a medida que aumenta el número de hijos, la proporción de mujeres tituladas tiende a disminuir

```

:::

## Comprobaciones predictivas posteriores sobre la muestra

```{r n-muestra-con}
# Se extrae aquí un valor para utilizar más adelante
n_con <- fert_estadisticos |> filter(titulo_uni == "con") |> pull(n)
```

Para hacer comprobaciones predictivas, no basta con aproximar una muestra predictiva posterior.
Como has podido ver en la lectura, necesitamos obtener estimadores de dicha distribución con los que poder comparar estadísticos de la distribución muestra.

Para ello, en lugar de aproximar la distribución predictiva posterior mediante muestras de Monte Carlo, lo que necesitamos es obtener la distribución predictiva posterior del estadístico de con el que queremos comparar la muestra empírica.
Es decir, necesitamos generar "muestras empíricas simuladas", calcular ese mismo estadístico, y compararlo con el estadístico de la muestra empírica.

A continuación vamos a hacer eso mismo con las distribuciones predictivas posteriores de los dos grupos de la población estudiada

### Pregunta 17

-   Observa el máximo número de hijos que se obtiene en la distribución empírica y en la distribución predictiva posterior en la pregunta 16. ¿Cuánto es en cada caso?

::: {#respuesta-17 .callout-note}
```{r}

#Valor empirico de valor maximo de numero de hijos
fertilidad_gss_1990 %>%
  filter(titulo_uni == "con", frecuencia > 0) %>%
  summarise(max_empirico = max(n_hijos))


#Valor maximo de numero de hijos que propone la distribucion predictiva posterior
max(dpred_post_conh)

#Conclusion: El modelo de distribucion predictiva posterior esta estimando un maximo mayor que el modelo empirico. Quizas hay una sobreestimacion de los valores


```
:::

### Pregunta 18

-   Escribe una función que, dado un valor de la tasa de fertilidad $\lambda$ y un tamaño muestral $n$, simule **muestras de tamaño** $n$ de una distribución de Poisson y devuelva **un único número que sea el valor máximo** de dicha distribución. Ayúdate del prototipo de función que hay dentro del "callout".

::: {#respuesta-18 .callout-note}
```{r max-poisson}
max_poisson <- function(lambda, n) {
  
  # COMPLETAR AQUÍ EL CUERPO DE LA FUNCIÓN
}
```
:::

### Pregunta 19

-   Utilizando la aproximación a la distribución posterior de la pregunta 11 y la función `max_poisson()` que has escrito, determina el valor-$p$ predictivo posterior de obtener, según el modelo ajustado, una muestra de mujeres universitarias de tamaño `{r} n_con` en la que el máximo número de hijos sea igual o menor que el máximo empírico obtenido en la pregunta 17, e interpreta el resultado.

*(NOTA: ¡Cuidado! Probablemente tengas que "iterar" sobre las muestras de la distribución posterior)*

::: {#respuesta-19 .callout-note}
:::

### Pregunta 20

-   En base a tus observaciones de las distribuciones predictivas posteriores, propón una comprobación predictiva posterior en alguna (o ambas) de las distribuciones en función de la titulación universitaria. Determina el valor-$p$ predictivo posterior correspondiente e interprétalo.

::: {#respuesta-20 .callout-note}
:::
